#include <Qt>

#include "key_mapping_sailfish.h"
#include "os/keyboard.h"

struct _SailfishTranslatePair {
	Qt::Key key;
	unsigned int keycode;
};

static _SailfishTranslatePair _key_keycode[] = {
	// misc keys
	{ Qt::Key_Escape, KEY_ESCAPE },
	{ Qt::Key_Tab, KEY_TAB },
	{ Qt::Key_Backtab, KEY_BACKTAB },
	{ Qt::Key_Backspace, KEY_BACKSPACE },
	{ Qt::Key_Return, KEY_ENTER },
	{ Qt::Key_Insert, KEY_INSERT },
	{ Qt::Key_Delete, KEY_DELETE },
	{ Qt::Key_Clear, KEY_DELETE },
	{ Qt::Key_Pause, KEY_PAUSE }, // Note: not related to pausing media
	{ Qt::Key_Print, KEY_PRINT },
	{ Qt::Key_SysReq, KEY_SYSREQ },
	{ Qt::Key_Home, KEY_HOME },
	{ Qt::Key_End, KEY_END },
	{ Qt::Key_Left, KEY_LEFT },
	{ Qt::Key_Up, KEY_UP },
	{ Qt::Key_Right, KEY_RIGHT },
	{ Qt::Key_Down, KEY_DOWN },
	{ Qt::Key_PageUp, KEY_PAGEUP },
	{ Qt::Key_PageDown, KEY_PAGEDOWN },
	{ Qt::Key_Shift, KEY_SHIFT },
	{ Qt::Key_Control, KEY_CONTROL },
	{ Qt::Key_Meta, KEY_META },
	{ Qt::Key_Alt, KEY_ALT },
	{ Qt::Key_AltGr, KEY_ALT },
	{ Qt::Key_CapsLock, KEY_CAPSLOCK },
	{ Qt::Key_NumLock, KEY_NUMLOCK },
	{ Qt::Key_ScrollLock, KEY_SCROLLLOCK },
	{ Qt::Key_Super_L, KEY_SUPER_L },
	{ Qt::Key_Super_R, KEY_SUPER_R },
	{ Qt::Key_Menu, KEY_MENU },
	{ Qt::Key_Hyper_L, KEY_HYPER_L },
	{ Qt::Key_Hyper_R, KEY_HYPER_R },
	{ Qt::Key_Help, KEY_HELP },
	{ Qt::Key_Clear, KEY_CLEAR },
	{ Qt::Key_Direction_L, KEY_DIRECTION_L },
	{ Qt::Key_Direction_R, KEY_DIRECTION_R },
	{ Qt::Key_Back, KEY_BACK },
	{ Qt::Key_Forward, KEY_FORWARD },
	{ Qt::Key_Stop, KEY_STOP },
	{ Qt::Key_Refresh, KEY_REFRESH },
	{ Qt::Key_VolumeDown, KEY_VOLUMEDOWN },
	{ Qt::Key_VolumeMute, KEY_VOLUMEMUTE },
	{ Qt::Key_VolumeUp, KEY_VOLUMEUP },
	{ Qt::Key_BassBoost, KEY_BASSBOOST },
	{ Qt::Key_BassUp, KEY_BASSUP },
	{ Qt::Key_BassDown, KEY_BASSDOWN },
	{ Qt::Key_TrebleUp, KEY_TREBLEUP },
	{ Qt::Key_TrebleDown, KEY_TREBLEDOWN },
	{ Qt::Key_MediaPlay, KEY_MEDIAPLAY },
	{ Qt::Key_MediaStop, KEY_MEDIASTOP },
	{ Qt::Key_MediaPrevious, KEY_MEDIAPREVIOUS },
	{ Qt::Key_MediaNext, KEY_MEDIANEXT },
	{ Qt::Key_MediaRecord, KEY_MEDIARECORD },
	// TODO: Qt::Key_MediaPause
	// TODO: Qt::Key_MediaTogglePlayPause
	{ Qt::Key_HomePage, KEY_HOMEPAGE },
	{ Qt::Key_Favorites, KEY_FAVORITES },
	{ Qt::Key_Search, KEY_SEARCH },
	{ Qt::Key_Standby, KEY_STANDBY },
	{ Qt::Key_OpenUrl, KEY_OPENURL },
	{ Qt::Key_LaunchMail, KEY_LAUNCHMAIL },
	{ Qt::Key_LaunchMedia, KEY_LAUNCHMEDIA },
	{ Qt::Key_Launch0, KEY_LAUNCH0 },
	{ Qt::Key_Launch1, KEY_LAUNCH1 },
	{ Qt::Key_Launch2, KEY_LAUNCH2 },
	{ Qt::Key_Launch3, KEY_LAUNCH3 },
	{ Qt::Key_Launch4, KEY_LAUNCH4 },
	{ Qt::Key_Launch5, KEY_LAUNCH5 },
	{ Qt::Key_Launch6, KEY_LAUNCH6 },
	{ Qt::Key_Launch7, KEY_LAUNCH7 },
	{ Qt::Key_Launch8, KEY_LAUNCH8 },
	{ Qt::Key_Launch9, KEY_LAUNCH9 },
	{ Qt::Key_LaunchA, KEY_LAUNCHA },
	{ Qt::Key_LaunchB, KEY_LAUNCHB },
	{ Qt::Key_LaunchC, KEY_LAUNCHC },
	{ Qt::Key_LaunchD, KEY_LAUNCHD },
	{ Qt::Key_LaunchE, KEY_LAUNCHE },
	{ Qt::Key_LaunchF, KEY_LAUNCHF },

	// TODO: keypad keys
	//{ , KEY_KP_PERIOD },
	//{ , KEY_KP_PERIOD },
	//{ , KEY_KP_ENTER },
	//{ , KEY_KP_MULTIPLY },
	//{ , KEY_KP_DIVIDE },
	//{ , KEY_KP_SUBTRACT },
	//{ , KEY_KP_ADD },
	//{ , KEY_KP_0 },
	//{ , KEY_KP_1 },
	//{ , KEY_KP_2 },
	//{ , KEY_KP_3 },
	//{ , KEY_KP_4 },
	//{ , KEY_KP_5 },
	//{ , KEY_KP_6 },
	//{ , KEY_KP_7 },
	//{ , KEY_KP_8 },
	//{ , KEY_KP_9 },

	// function keys
	{ Qt::Key_F1, KEY_F1 },
	{ Qt::Key_F2, KEY_F2 },
	{ Qt::Key_F3, KEY_F3 },
	{ Qt::Key_F4, KEY_F4 },
	{ Qt::Key_F5, KEY_F5 },
	{ Qt::Key_F6, KEY_F6 },
	{ Qt::Key_F7, KEY_F7 },
	{ Qt::Key_F8, KEY_F8 },
	{ Qt::Key_F9, KEY_F9 },
	{ Qt::Key_F10, KEY_F10 },
	{ Qt::Key_F11, KEY_F11 },
	{ Qt::Key_F12, KEY_F12 },
	{ Qt::Key_F13, KEY_F13 },
	{ Qt::Key_F14, KEY_F14 },
	{ Qt::Key_F15, KEY_F15 },
	{ Qt::Key_F16, KEY_F16 },

	{ Qt::Key_Space, KEY_SPACE },
	{ Qt::Key_Exclam, KEY_EXCLAM },
	{ Qt::Key_QuoteDbl, KEY_QUOTEDBL },
	{ Qt::Key_NumberSign, KEY_NUMBERSIGN },
	{ Qt::Key_Dollar, KEY_DOLLAR },
	{ Qt::Key_Percent, KEY_PERCENT },
	{ Qt::Key_Ampersand, KEY_AMPERSAND },
	{ Qt::Key_Apostrophe, KEY_APOSTROPHE },
	{ Qt::Key_ParenLeft, KEY_PARENLEFT },
	{ Qt::Key_ParenRight, KEY_PARENRIGHT },
	{ Qt::Key_Asterisk, KEY_ASTERISK },
	{ Qt::Key_Plus, KEY_PLUS },
	{ Qt::Key_Comma, KEY_COMMA },
	{ Qt::Key_Minus, KEY_MINUS },
	{ Qt::Key_Period, KEY_PERIOD },
	{ Qt::Key_Slash, KEY_SLASH },
	{ Qt::Key_0, KEY_0 },
	{ Qt::Key_1, KEY_1 },
	{ Qt::Key_2, KEY_2 },
	{ Qt::Key_3, KEY_3 },
	{ Qt::Key_4, KEY_4 },
	{ Qt::Key_5, KEY_5 },
	{ Qt::Key_6, KEY_6 },
	{ Qt::Key_7, KEY_7 },
	{ Qt::Key_8, KEY_8 },
	{ Qt::Key_9, KEY_9 },
	{ Qt::Key_Colon, KEY_COLON },
	{ Qt::Key_Semicolon, KEY_SEMICOLON },
	{ Qt::Key_Less, KEY_LESS },
	{ Qt::Key_Equal, KEY_EQUAL },
	{ Qt::Key_Greater, KEY_GREATER },
	{ Qt::Key_Question, KEY_QUESTION },
	{ Qt::Key_At, KEY_AT },
	{ Qt::Key_A, KEY_A },
	{ Qt::Key_B, KEY_B },
	{ Qt::Key_C, KEY_C },
	{ Qt::Key_D, KEY_D },
	{ Qt::Key_E, KEY_E },
	{ Qt::Key_F, KEY_F },
	{ Qt::Key_G, KEY_G },
	{ Qt::Key_H, KEY_H },
	{ Qt::Key_I, KEY_I },
	{ Qt::Key_J, KEY_J },
	{ Qt::Key_K, KEY_K },
	{ Qt::Key_L, KEY_L },
	{ Qt::Key_M, KEY_M },
	{ Qt::Key_N, KEY_N },
	{ Qt::Key_O, KEY_O },
	{ Qt::Key_P, KEY_P },
	{ Qt::Key_Q, KEY_Q },
	{ Qt::Key_R, KEY_R },
	{ Qt::Key_S, KEY_S },
	{ Qt::Key_T, KEY_T },
	{ Qt::Key_U, KEY_U },
	{ Qt::Key_V, KEY_V },
	{ Qt::Key_W, KEY_W },
	{ Qt::Key_X, KEY_X },
	{ Qt::Key_Y, KEY_Y },
	{ Qt::Key_Z, KEY_Z },
	{ Qt::Key_BracketLeft, KEY_BRACKETLEFT },
	{ Qt::Key_Backslash, KEY_BACKSLASH },
	{ Qt::Key_BracketRight, KEY_BRACKETRIGHT },
	{ Qt::Key_AsciiCircum, KEY_ASCIICIRCUM },
	{ Qt::Key_Underscore, KEY_UNDERSCORE },
	{ Qt::Key_QuoteLeft, KEY_QUOTELEFT },
	{ Qt::Key_BraceLeft, KEY_BRACELEFT },
	{ Qt::Key_Bar, KEY_BAR },
	{ Qt::Key_BraceRight, KEY_BRACERIGHT },
	{ Qt::Key_AsciiTilde, KEY_ASCIITILDE },
	{ Qt::Key_unknown, KEY_UNKNOWN }
};

unsigned int KeyMappingSailfish::get_keycode(int p_key) {
	for (int i = 0; _key_keycode[i].keycode != KEY_UNKNOWN; i++) {
		if (_key_keycode[i].key == p_key) {
			return _key_keycode[i].keycode;
		}
	}

	return KEY_UNKNOWN;
}
